#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AZSCommand
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AZSCommand")]
	public partial class FuelStationControlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFuel(Fuel instance);
    partial void UpdateFuel(Fuel instance);
    partial void DeleteFuel(Fuel instance);
    partial void InsertFuelStations(FuelStations instance);
    partial void UpdateFuelStations(FuelStations instance);
    partial void DeleteFuelStations(FuelStations instance);
    partial void InsertModels(Models instance);
    partial void UpdateModels(Models instance);
    partial void DeleteModels(Models instance);
    partial void InsertCars(Cars instance);
    partial void UpdateCars(Cars instance);
    partial void DeleteCars(Cars instance);
    #endregion
		
		public FuelStationControlDataContext() : 
				base(global::AZSCommand.Properties.Settings.Default.AZSCommandConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FuelStationControlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FuelStationControlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FuelStationControlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FuelStationControlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Fuel> Fuels
		{
			get
			{
				return this.GetTable<Fuel>();
			}
		}
		
		public System.Data.Linq.Table<FuelStations> FuelStations
		{
			get
			{
				return this.GetTable<FuelStations>();
			}
		}
		
		public System.Data.Linq.Table<Models> Models
		{
			get
			{
				return this.GetTable<Models>();
			}
		}
		
		public System.Data.Linq.Table<Restock> Restocks
		{
			get
			{
				return this.GetTable<Restock>();
			}
		}
		
		public System.Data.Linq.Table<Cars> Cars
		{
			get
			{
				return this.GetTable<Cars>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fuel")]
	public partial class Fuel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Вид_палива;
		
		private string _Тип_палива;
		
		private decimal _Ціна;
		
		private EntitySet<FuelStations> _FuelStations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnВид_паливаChanging(string value);
    partial void OnВид_паливаChanged();
    partial void OnТип_паливаChanging(string value);
    partial void OnТип_паливаChanged();
    partial void OnЦінаChanging(decimal value);
    partial void OnЦінаChanged();
    #endregion
		
		public Fuel()
		{
			this._FuelStations = new EntitySet<FuelStations>(new Action<FuelStations>(this.attach_FuelStations), new Action<FuelStations>(this.detach_FuelStations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Вид палива]", Storage="_Вид_палива", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Вид_палива
		{
			get
			{
				return this._Вид_палива;
			}
			set
			{
				if ((this._Вид_палива != value))
				{
					this.OnВид_паливаChanging(value);
					this.SendPropertyChanging();
					this._Вид_палива = value;
					this.SendPropertyChanged("Вид_палива");
					this.OnВид_паливаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Тип палива]", Storage="_Тип_палива", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Тип_палива
		{
			get
			{
				return this._Тип_палива;
			}
			set
			{
				if ((this._Тип_палива != value))
				{
					this.OnТип_паливаChanging(value);
					this.SendPropertyChanging();
					this._Тип_палива = value;
					this.SendPropertyChanged("Тип_палива");
					this.OnТип_паливаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ціна", DbType="SmallMoney NOT NULL")]
		public decimal Ціна
		{
			get
			{
				return this._Ціна;
			}
			set
			{
				if ((this._Ціна != value))
				{
					this.OnЦінаChanging(value);
					this.SendPropertyChanging();
					this._Ціна = value;
					this.SendPropertyChanged("Ціна");
					this.OnЦінаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fuel_FuelStations", Storage="_FuelStations", ThisKey="Вид_палива", OtherKey="Вид_палива")]
		public EntitySet<FuelStations> FuelStations
		{
			get
			{
				return this._FuelStations;
			}
			set
			{
				this._FuelStations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FuelStations(FuelStations entity)
		{
			this.SendPropertyChanging();
			entity.Fuel = this;
		}
		
		private void detach_FuelStations(FuelStations entity)
		{
			this.SendPropertyChanging();
			entity.Fuel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FuelStation")]
	public partial class FuelStations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Назва_ПС;
		
		private float _Поточний_об_єм_палива;
		
		private float _Макс__об_єм_палива;
		
		private string _Вид_палива;
		
		private EntityRef<Fuel> _Fuel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnНазва_ПСChanging(string value);
    partial void OnНазва_ПСChanged();
    partial void OnПоточний_об_єм_паливаChanging(float value);
    partial void OnПоточний_об_єм_паливаChanged();
    partial void OnМакс__об_єм_паливаChanging(float value);
    partial void OnМакс__об_єм_паливаChanged();
    partial void OnВид_паливаChanging(string value);
    partial void OnВид_паливаChanged();
    #endregion
		
		public FuelStations()
		{
			this._Fuel = default(EntityRef<Fuel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Назва ПС]", Storage="_Назва_ПС", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Назва_ПС
		{
			get
			{
				return this._Назва_ПС;
			}
			set
			{
				if ((this._Назва_ПС != value))
				{
					this.OnНазва_ПСChanging(value);
					this.SendPropertyChanging();
					this._Назва_ПС = value;
					this.SendPropertyChanged("Назва_ПС");
					this.OnНазва_ПСChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Поточний об\'єм палива]", Storage="_Поточний_об_єм_палива", DbType="Real NOT NULL")]
		public float Поточний_об_єм_палива
		{
			get
			{
				return this._Поточний_об_єм_палива;
			}
			set
			{
				if ((this._Поточний_об_єм_палива != value))
				{
					this.OnПоточний_об_єм_паливаChanging(value);
					this.SendPropertyChanging();
					this._Поточний_об_єм_палива = value;
					this.SendPropertyChanged("Поточний_об_єм_палива");
					this.OnПоточний_об_єм_паливаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Макс. об\'єм палива]", Storage="_Макс__об_єм_палива", DbType="Real NOT NULL")]
		public float Макс__об_єм_палива
		{
			get
			{
				return this._Макс__об_єм_палива;
			}
			set
			{
				if ((this._Макс__об_єм_палива != value))
				{
					this.OnМакс__об_єм_паливаChanging(value);
					this.SendPropertyChanging();
					this._Макс__об_єм_палива = value;
					this.SendPropertyChanged("Макс__об_єм_палива");
					this.OnМакс__об_єм_паливаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Вид палива]", Storage="_Вид_палива", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Вид_палива
		{
			get
			{
				return this._Вид_палива;
			}
			set
			{
				if ((this._Вид_палива != value))
				{
					this.OnВид_паливаChanging(value);
					this.SendPropertyChanging();
					this._Вид_палива = value;
					this.SendPropertyChanged("Вид_палива");
					this.OnВид_паливаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fuel_FuelStations", Storage="_Fuel", ThisKey="Вид_палива", OtherKey="Вид_палива", IsForeignKey=true)]
		public Fuel Fuel
		{
			get
			{
				return this._Fuel.Entity;
			}
			set
			{
				Fuel previousValue = this._Fuel.Entity;
				if (((previousValue != value) 
							|| (this._Fuel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fuel.Entity = null;
						previousValue.FuelStations.Remove(this);
					}
					this._Fuel.Entity = value;
					if ((value != null))
					{
						value.FuelStations.Add(this);
						this._Вид_палива = value.Вид_палива;
					}
					else
					{
						this._Вид_палива = default(string);
					}
					this.SendPropertyChanged("Fuel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Models")]
	public partial class Models : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Модель;
		
		private float _Об_єм_баку;
		
		private string _Тип_палива;
		
		private EntitySet<Cars> _Cars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnМодельChanging(string value);
    partial void OnМодельChanged();
    partial void OnОб_єм_бакуChanging(float value);
    partial void OnОб_єм_бакуChanged();
    partial void OnТип_паливаChanging(string value);
    partial void OnТип_паливаChanged();
    #endregion
		
		public Models()
		{
			this._Cars = new EntitySet<Cars>(new Action<Cars>(this.attach_Cars), new Action<Cars>(this.detach_Cars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Модель", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Модель
		{
			get
			{
				return this._Модель;
			}
			set
			{
				if ((this._Модель != value))
				{
					this.OnМодельChanging(value);
					this.SendPropertyChanging();
					this._Модель = value;
					this.SendPropertyChanged("Модель");
					this.OnМодельChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Об\'єм баку]", Storage="_Об_єм_баку", DbType="Real NOT NULL")]
		public float Об_єм_баку
		{
			get
			{
				return this._Об_єм_баку;
			}
			set
			{
				if ((this._Об_єм_баку != value))
				{
					this.OnОб_єм_бакуChanging(value);
					this.SendPropertyChanging();
					this._Об_єм_баку = value;
					this.SendPropertyChanged("Об_єм_баку");
					this.OnОб_єм_бакуChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Тип палива]", Storage="_Тип_палива", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Тип_палива
		{
			get
			{
				return this._Тип_палива;
			}
			set
			{
				if ((this._Тип_палива != value))
				{
					this.OnТип_паливаChanging(value);
					this.SendPropertyChanging();
					this._Тип_палива = value;
					this.SendPropertyChanged("Тип_палива");
					this.OnТип_паливаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Models_Cars", Storage="_Cars", ThisKey="Модель", OtherKey="Модель")]
		public EntitySet<Cars> Cars
		{
			get
			{
				return this._Cars;
			}
			set
			{
				this._Cars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cars(Cars entity)
		{
			this.SendPropertyChanging();
			entity.Models = this;
		}
		
		private void detach_Cars(Cars entity)
		{
			this.SendPropertyChanging();
			entity.Models = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Restock")]
	public partial class Restock
	{
		
		private int _ID;
		
		private string _Вид_палива;
		
		private System.Nullable<float> _Поповнити_у_кількості;
		
		public Restock()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Вид палива]", Storage="_Вид_палива", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Вид_палива
		{
			get
			{
				return this._Вид_палива;
			}
			set
			{
				if ((this._Вид_палива != value))
				{
					this._Вид_палива = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Поповнити у кількості]", Storage="_Поповнити_у_кількості", DbType="Real")]
		public System.Nullable<float> Поповнити_у_кількості
		{
			get
			{
				return this._Поповнити_у_кількості;
			}
			set
			{
				if ((this._Поповнити_у_кількості != value))
				{
					this._Поповнити_у_кількості = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cars")]
	public partial class Cars : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Марка_автомобіля;
		
		private string _Модель;
		
		private string _Номерний_знак;
		
		private EntityRef<Models> _Models;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnМарка_автомобіляChanging(string value);
    partial void OnМарка_автомобіляChanged();
    partial void OnМодельChanging(string value);
    partial void OnМодельChanged();
    partial void OnНомерний_знакChanging(string value);
    partial void OnНомерний_знакChanged();
    #endregion
		
		public Cars()
		{
			this._Models = default(EntityRef<Models>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Марка автомобіля]", Storage="_Марка_автомобіля", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Марка_автомобіля
		{
			get
			{
				return this._Марка_автомобіля;
			}
			set
			{
				if ((this._Марка_автомобіля != value))
				{
					this.OnМарка_автомобіляChanging(value);
					this.SendPropertyChanging();
					this._Марка_автомобіля = value;
					this.SendPropertyChanged("Марка_автомобіля");
					this.OnМарка_автомобіляChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Модель", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Модель
		{
			get
			{
				return this._Модель;
			}
			set
			{
				if ((this._Модель != value))
				{
					if (this._Models.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnМодельChanging(value);
					this.SendPropertyChanging();
					this._Модель = value;
					this.SendPropertyChanged("Модель");
					this.OnМодельChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Номерний знак]", Storage="_Номерний_знак", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Номерний_знак
		{
			get
			{
				return this._Номерний_знак;
			}
			set
			{
				if ((this._Номерний_знак != value))
				{
					this.OnНомерний_знакChanging(value);
					this.SendPropertyChanging();
					this._Номерний_знак = value;
					this.SendPropertyChanged("Номерний_знак");
					this.OnНомерний_знакChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Models_Cars", Storage="_Models", ThisKey="Модель", OtherKey="Модель", IsForeignKey=true)]
		public Models Models
		{
			get
			{
				return this._Models.Entity;
			}
			set
			{
				Models previousValue = this._Models.Entity;
				if (((previousValue != value) 
							|| (this._Models.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Models.Entity = null;
						previousValue.Cars.Remove(this);
					}
					this._Models.Entity = value;
					if ((value != null))
					{
						value.Cars.Add(this);
						this._Модель = value.Модель;
					}
					else
					{
						this._Модель = default(string);
					}
					this.SendPropertyChanged("Models");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
